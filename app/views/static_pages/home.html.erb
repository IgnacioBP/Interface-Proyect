<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h1 class="my-4 text-center">Quacks</h1>
      <% @tweets.each do |tweet| %>
        <div class="card mb-4">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
              <h5 class="card-title mb-0"><%= tweet.user.full_name %></h5>
              <small class="text-muted"><%= tweet.creation_date %></small>
            </div>
            <p class="card-text mt-3"><%= tweet.body %></p>

            <div id="reaction-display-<%= tweet.id %>" class="mt-3">
              <%= render 'tweets/reaction_display', tweet: tweet %>
            </div>

            <div class="dropdown mt-3">
              <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="reactionDropdown-<%= tweet.id %>" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Reaccionar
              </button>
              <div class="dropdown-menu reaction-dropdown" aria-labelledby="reactionDropdown-<%= tweet.id %>">
                <% @reaction_levels.each do |reaction_level| %>
                  <%= form_with url: tweet_react_path(tweet, reaction_level.id), method: :post, remote: true do |f| %>
                    <%= f.button reaction_level.emoji, class: 'dropdown-item reaction-emoji' %>
                  <% end %>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>  
</div>

<style>

.container {
  display: flex;
  justify-content: center;
}

.card {
  max-width: 1000px;
  width: 100%;
}
.card {
  border: none;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
}

.card-title {
  font-size: 18px;
  font-weight: bold;
}

.card-text {
  font-size: 16px;
  line-height: 1.6;
}

.text-muted {
  font-size: 14px;
}

.reaction-emoji {
  font-size: 20px;
}

.dropdown-menu {
  min-width: 100px;
  padding: 0;
  border: none;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.dropdown-item {
  font-size: 20px;
  text-align: center;
  padding: 10px;
}

.show {
  display: block;
}
.reaction-dropdown {
  min-width: 100px;
}

.reaction-emoji {
  font-size: 20px;
  text-align: center;
  padding: 5px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
  const reactionDisplays = document.querySelectorAll('[id^="reaction-display-"]');

  // Ocultar los emojis del dropdown inicialmente
  const reactionDropdowns = document.querySelectorAll('.reaction-dropdown');
  reactionDropdowns.forEach(function(dropdown) {
    dropdown.style.display = 'none';
  });

  dropdownToggles.forEach(function(toggle) {
    toggle.addEventListener('click', function() {
      const dropdownMenu = this.nextElementSibling;
      dropdownMenu.style.display = dropdownMenu.style.display === 'none' ? 'block' : 'none';
    });
  });

  // Manejar el envío del formulario de reacción
  const reactionForms = document.querySelectorAll('form[method="post"]');
  reactionForms.forEach(function(form) {
    form.addEventListener('ajax:success', function(event) {
      const [data, status, xhr] = event.detail;
      const tweetId = data.tweet_id;
      const reactionDisplay = document.getElementById(`reaction-display-${tweetId}`);
      reactionDisplay.innerHTML = data.reaction_display;
    });
  });
});
</script>