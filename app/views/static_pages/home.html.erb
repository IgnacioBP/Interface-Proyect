<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h1 class="my-4 text-center">Quacks</h1>
      <% @tweets.each do |tweet| %>
        <div class="tweet-container">
          <div class="card mb-4">
            <div class="card-body">
              <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0"><%= tweet.user.full_name %></h5>
                <small class="text-muted"><%= tweet.creation_date %></small>
              </div>
              <p class="card-text mt-3"><%= tweet.body %></p>
              <div id="reaction-display-<%= tweet.id %>" class="mt-3">
                <%= render partial: 'tweets/reaction_display', locals: { tweet: tweet, reaction_levels: ReactionLevel.all, current_user: current_user } %>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>  
</div>

<style>

  .container {
    display: flex;
    justify-content: center;
  }

  .tweet-container {
    position: relative;
  }

  .card {
    max-width: 1000px;
    width: 100%;
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;

  }



  .card-title {
    font-size: 18px;
    font-weight: bold;
  }

  .card-text {
    font-size: 16px;
    line-height: 1.6;
  }

  .text-muted {
    font-size: 14px;
  }

  .reaction-emoji {
    font-size: 20px;
  }

  .dropdown-menu {
    position: absolute;
    min-width: 100px;
    padding: 0;
    border: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .dropdown-item {
    font-size: 20px;
    text-align: center;
    padding: 10px;
  }

  .show {
    display: block;
  }
  .reaction-dropdown {
    min-width: 100px;
  }

  .reaction-emoji {
    font-size: 20px;
    text-align: center;
    padding: 5px;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');

  // Manejar el envío del formulario de reacción al hacer clic en la imagen
  const reactionImages = document.querySelectorAll('.reaction-image');
  reactionImages.forEach(function(image) {
    image.addEventListener('click', function(e) {
      e.preventDefault(); // Prevenir el comportamiento por defecto
      const form = this.closest('form');
      
      // Enviar el formulario usando fetch
      fetch(form.action, {
        method: form.method,
        body: new FormData(form),
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => response.json())
      .then(data => {
        console.log('Formulario de reacción enviado con éxito');
        const tweetId = data.tweet_id;
        const reactionDisplay = document.getElementById(`reaction-display-${tweetId}`);
        reactionDisplay.innerHTML = data.reaction_display;

        // Cerrar el dropdown después de seleccionar una reacción
        const dropdown = form.closest('.dropdown');
        const dropdownMenu = dropdown.querySelector('.dropdown-menu');
        dropdownMenu.style.display = 'none'; // Ocultar el menú desplegable
      })
      .catch(error => console.error('Error:', error));
    });
  });

  // Mostrar/ocultar el dropdown al hacer clic en el botón de "Reaccionar"
  dropdownToggles.forEach(function(toggle) {
    toggle.addEventListener('click', function() {
      const dropdownMenu = this.nextElementSibling;
      dropdownMenu.style.display = dropdownMenu.style.display === 'none' ? 'block' : 'none';
    });
  });
});

  // Manejar la respuesta AJAX exitosa después de enviar el formulario
  const reactionForms = document.querySelectorAll('form[method="post"]');
  reactionForms.forEach(function(form) {
    form.addEventListener('ajax:success', function(event) {
      console.log('Formulario de reacción enviado con éxito');
      const [data, status, xhr] = event.detail;
      const tweetId = data.tweet_id;
      const reactionDisplay = document.getElementById(`reaction-display-${tweetId}`);
      reactionDisplay.innerHTML = data.reaction_display;

      // Cerrar el dropdown después de seleccionar una reacción
      const dropdown = form.closest('.dropdown');
      const dropdownMenu = dropdown.querySelector('.dropdown-menu');
      dropdownMenu.style.display = 'none'; // Ocultar el menú desplegable
    });
  });
</script>