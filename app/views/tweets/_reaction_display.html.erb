<head>
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
  />
</head>

<div id="reaction-display-<%= tweet.id %>" class="reaction_section">
  <span class="current-reaction">
    <% if tweet.current_reaction_level(current_user).present? %>
      <%= image_tag "reactions/#{tweet.current_reaction_level(current_user).name.downcase}.png", class: 'current-reaction-image', alt: "Current reaction: #{tweet.current_reaction_level(current_user).name}" %>
    <% else %>
      <span class="no-reaction">Sin reacción</span>
    <% end %>
  </span>
  <div class="dropdown mt-3">
    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="reactionDropdown-<%= tweet.id %>" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      Reaccionar
    </button>
    <div class="dropdown-menu reaction-dropdown" aria-labelledby="reactionDropdown-<%= tweet.id %>">
      <% reaction_levels.each do |reaction_level| %>
        <%= form_with url: tweet_react_path(tweet, reaction_level.id), method: :post, remote: true, class: "reaction-form" do |f| %>
          <% if reaction_level.name.downcase == "love" %>
            <%= image_submit_tag "reactions/#{reaction_level.name.downcase}.png", class: 'love-reaction dropdown-item reaction-image', alt: "React with #{reaction_level.name}" %>
          <% elsif reaction_level.name.downcase == "dislike" %>
            <%= image_submit_tag "reactions/#{reaction_level.name.downcase}.png", class: 'angry-reaction dropdown-item reaction-image', alt: "React with #{reaction_level.name}" %>
          <% elsif reaction_level.name.downcase == "haha" %>
            <%= image_submit_tag "reactions/#{reaction_level.name.downcase}.png", class: 'funny-reaction dropdown-item reaction-image', alt: "React with #{reaction_level.name}" %>
          <% elsif reaction_level.name.downcase == "sad" %>
            <%= image_submit_tag "reactions/#{reaction_level.name.downcase}.png", class: 'sad-reaction dropdown-item reaction-image', alt: "React with #{reaction_level.name}" %>
          <% elsif reaction_level.name.downcase == "like" %>
            <%= image_submit_tag "reactions/#{reaction_level.name.downcase}.png", class: 'like-reaction dropdown-item reaction-image', alt: "React with #{reaction_level.name}" %>
          <% end %>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<style>
.reaction-section {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 10px;
  background-color: transparent;
}

.reaction-dropdown {
  display: flex;
  flex-direction: row;
  gap: 10px;
  padding: 5px;
  min-width: auto;
}

.dropdown-menu.show {
  display: flex;
}

.current-reaction {
  display: flex;
  align-items: center;
}

.no-reaction {
  font-style: italic;
  color: #888;
  margin-left: 5px;
}

.dropdown-menu {
  display: none;
}

.dropdown-toggle {
  margin-left: 10px;
}

/* Ajuste de las imágenes de reacción para que tengan el mismo tamaño y sin fondo */
.reaction-image {
  cursor: pointer;
  width: 55px; /* Tamaño estándar para todas las reacciones */
  height: 55px; /* Tamaño estándar para todas las reacciones */
  background-color: transparent; /* Sin fondo */
  border: none; /* Sin borde */
  padding: 0;
  object-fit: contain; /* Asegura que la imagen mantenga sus proporciones */
}

.dropdown-item {
  padding: 0;
  background-color: transparent;
  border: none;
}

.love-reaction:hover {
  animation: heartBeat 1s;
}

@keyframes wiggle {
  0% { transform: translate(2px, 0); }
  50% { transform: translate(-2px, 0); }
  100% { transform: translate(2px, 0); }
}

.angry-reaction:hover {
  animation: wiggleside 75ms infinite;
  animation-timing-function: linear;
}

.funny-reaction:hover {
  animation: swing 1s;
}

.sad-reaction:hover {
  animation: wobble 1s;
}

.like-reaction:hover {
  animation: rubberBand 1s;
}


</style>

<script>
  function initializeDropdowns() {
    const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
    dropdownToggles.forEach(toggle => {
      toggle.addEventListener('click', function(event) {
        event.preventDefault();
        const dropdownMenu = this.nextElementSibling;
        dropdownMenu.classList.toggle('show');
      });
    });

    document.addEventListener('click', function(event) {
      console.log("click");
      if (!event.target.matches('.dropdown-toggle')) {
        const dropdowns = document.getElementsByClassName("dropdown-menu");
        for (let i = 0; i < dropdowns.length; i++) {
          const openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    });
  }

  initializeDropdowns();

  document.body.addEventListener('ajax:success', function(event) {
    if (event.target.classList.contains('reaction-form')) {
      const [data] = event.detail;
      const reactionDisplay = document.getElementById(`reaction-display-${data.tweet_id}`);
      console.log(reactionDisplay);
      if (reactionDisplay) {
        reactionDisplay.outerHTML = data.reaction_display;
        initializeDropdowns(); // Vuelve a inicializar los dropdowns si el contenido cambia
      }
    }
  });
</script>
